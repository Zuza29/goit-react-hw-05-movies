{"version":3,"file":"static/js/186.126b0741.chunk.js","mappings":"oPAqDA,UA/CiB,WACf,OAAkCA,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAG,6CAAyCF,EAAzC,oEAuBT,OArBAG,EAAAA,EAAAA,YAAU,WACRN,GAAa,GACb,IAAMO,EAAU,mCAAG,uGACYC,EAAAA,EAAAA,GAAUH,GADtB,YACXI,EADW,yBAGfT,GAAa,IACPU,GAJS,OAIKD,EAAeC,UAC3BC,KAAI,SAAAC,GAAM,MAAK,CACrBC,QAASD,EAAOC,QAChBC,OAAQF,EAAOE,OACfC,GAAIH,EAAOG,GAHK,IAKlBb,EAAWQ,GAVI,8BAYT,IAAIM,MAAM,2BAZD,4CAAH,qDAehBT,GAED,GAAE,KAGD,gCACGR,IAAa,SAAC,IAAD,KACd,qCACA,wBACGE,GAAWA,EAAQgB,OAClBhB,EAAQU,KAAI,gBAAGI,EAAH,EAAGA,GAAID,EAAP,EAAOA,OAAQD,EAAf,EAAeA,QAAf,OACV,2BACE,qCAAaC,MACb,uBAAID,MAFGE,EADC,KAOZ,wDAKT,C,mEClDD,G,OAAgC,gCAAhC,EAAwE,wB,SCmBxE,EAhBiB,kBACf,gBAAKG,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTT,UAAWC,KAXA,C,oBCAjB,IAJkB,SAAAS,GAAG,OACbC,MAAMD,GACGE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAHP,C,oBCCrB,KAAgB,oBAAsB,0CAA0C,iBAAmB,uCAAuC,eAAiB,qCAAqC,SAAW,+B","sources":["components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","utils/fetchData.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9"],"sourcesContent":["import fetchData from 'utils/fetchData';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Spinner from 'components/Spinner/Spinner';\nimport 'components/MovieDetails/MovieDetails.module.css';\n\n const Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=16b877ef666ac997a00ad8a16d1abc88&language=en-US`;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getReviews = async () => {\n      const reviewsResults = await fetchData(URL);\n      if (reviewsResults) {\n        setIsLoading(false);\n        const results = [...reviewsResults.results];\n        results.map(review => ({\n          content: review.content,\n          author: review.author,\n          id: review.id,\n        }));\n        setReviews(results);\n      } else {\n        throw new Error('Something went wrong...');\n      }\n    };\n    getReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <h2>Reviews</h2>\n      <ul>\n        {reviews && reviews.length ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>There are no reviews yet</p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Spinner_loaderWrapper__P2Ed1\",\"loader\":\"Spinner_loader__GQ3jW\"};","import { BallTriangle } from 'react-loader-spinner';\nimport React from 'react';\nimport css from './Spinner.module.css';\n\n const Spinner = () => (\n  <div className={css.loaderWrapper}>\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"#3f51b5\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperClass={{}}\n      wrapperStyle=\"\"\n      visible={true}\n      className={css.loader}\n    />\n  </div>\n);\n\nexport default Spinner;","const fetchData = url =>\n        fetch(url)\n                .then(resp => resp.json())\n                .catch(error => console.log(error));\nexport default fetchData;","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsWrapper\":\"MovieDetails_movieDetailsWrapper__kPD86\",\"extraInfoWrapper\":\"MovieDetails_extraInfoWrapper__GwekJ\",\"buttonsWrapper\":\"MovieDetails_buttonsWrapper__220iQ\",\"castList\":\"MovieDetails_castList__TVMgE\"};"],"names":["useState","isLoading","setIsLoading","reviews","setReviews","movieId","useParams","URL","useEffect","getReviews","fetchData","reviewsResults","results","map","review","content","author","id","Error","length","className","css","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","url","fetch","then","resp","json","catch","error","console","log"],"sourceRoot":""}