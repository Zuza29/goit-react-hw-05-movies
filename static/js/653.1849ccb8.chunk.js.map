{"version":3,"file":"static/js/653.1849ccb8.chunk.js","mappings":"yRAuEA,EAjEgB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAiBJ,EAAAA,EAAAA,UAAS,IAAnBK,GAAP,eAEMC,EAAY,mCAAG,WAAMC,GAAN,4EACnBH,GAAa,GACbG,EAAMC,iBACND,EAAME,cAAcC,QACC,KAAjBT,EAAMU,OAJS,uBAKjBP,GAAa,GALI,kBAMVQ,EAAAA,OAAAA,KAAY,2BANF,wBAQKC,EAAAA,EAAAA,GAAU,4FAAD,OAC6DZ,IAT3E,UAWc,KAH3Ba,EARa,QAWLC,QAAQC,OAXH,wBAYjBZ,GAAa,GAZI,kBAaVQ,EAAAA,OAAAA,KAAY,oDAbF,YAefE,EAfe,iBAgBjBV,GAAa,IACPW,GAjBW,OAiBGD,EAAUC,UACtBE,KAAI,SAAAC,GAAK,MAAK,CACpBC,MAAOD,EAAMC,MACbC,GAAIF,EAAME,GAFK,IAIjBL,EAAQM,SAAQ,SAAAC,GACdjB,EAAOkB,KAAK,CACVC,QAASF,EAAOF,GAChBK,WAAYH,EAAOH,OAEtB,IA3BgB,8BA6BX,IAAIO,MAAM,2BA7BC,4CAAH,sDAqClB,OACE,kBAAMC,SAAUrB,EAAhB,WACE,kBAAOsB,QAAQ,gBAAiB,KAChC,kBAAOR,GAAG,cAAcS,KAAK,OAAOC,SAPnB,SAAAvB,GACnBL,EAASK,EAAMwB,OAAO9B,MACvB,KAMG,mBAAQ4B,KAAK,SAAb,qBACA,wBACG1B,GACC,SAAC6B,EAAA,EAAD,IAEkB,IAAlB3B,EAAOW,QACPX,EAAOY,KAAI,SAAAC,GAAK,OACd,yBACE,SAAC,KAAD,CAAMe,GAAE,kBAAaf,EAAMM,SAA3B,UACE,uBAAIN,EAAMO,gBAFLP,EAAMM,QADD,QAWzB,C,mECpED,G,OAAgC,gCAAhC,EAAwE,wB,SCmBxE,EAhBiB,kBACf,gBAAKU,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTT,UAAWC,KAXA,C,oBCAjB,IAJkB,SAAAS,GAAG,OACbC,MAAMD,GACGE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAT,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAHP,C","sources":["components/Movies/Movies.jsx","webpack://react-homework-template/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","utils/fetchData.js"],"sourcesContent":["import { useState } from 'react';\nimport fetchData from 'utils/fetchData';\nimport { Link } from 'react-router-dom';\nimport Spinner  from 'components/Spinner/Spinner';\nimport './Movies.module.css';\nimport { Notify } from 'notiflix';\n const Movies = () => {\n  const [value, setValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [titles] = useState([]);\n\n  const handleSubmit = async event => {\n    setIsLoading(true);\n    event.preventDefault();\n    event.currentTarget.reset();\n    if (value.trim() === '') {\n      setIsLoading(false);\n      return Notify.info('Please provide a query');\n    }\n    const movieList = await fetchData(\n      `https://api.themoviedb.org/3/search/movie?api_key=16b877ef666ac997a00ad8a16d1abc88&query=${value}`\n    );\n    if (movieList.results.length === 0) {\n      setIsLoading(false);\n      return Notify.info('Sorry, there are no titles matching your search');\n    }\n    if (movieList) {\n      setIsLoading(false);\n      const results = [...movieList.results];\n      results.map(movie => ({\n        title: movie.title,\n        id: movie.id,\n      }));\n      results.forEach(result => {\n        titles.push({\n          movieId: result.id,\n          movieTitle: result.title,\n        });\n      });\n    } else {\n      throw new Error('Something went wrong...');\n    }\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"searchInput\" />{' '}\n      <input id=\"searchInput\" type=\"text\" onChange={handleChange} />\n      <button type=\"submit\">Search</button>\n      <ul>\n        {isLoading ? (\n          <Spinner />\n        ) : (\n          titles.length !== 0 &&\n          titles.map(movie => (\n            <li key={movie.movieId}>\n              <Link to={`/movies/${movie.movieId}`}>\n                <p>{movie.movieTitle}</p>\n              </Link>\n            </li>\n          ))\n        )}\n      </ul>\n    </form>\n  );\n};\n\nexport default Movies;","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Spinner_loaderWrapper__P2Ed1\",\"loader\":\"Spinner_loader__GQ3jW\"};","import { BallTriangle } from 'react-loader-spinner';\nimport React from 'react';\nimport css from './Spinner.module.css';\n\n const Spinner = () => (\n  <div className={css.loaderWrapper}>\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"#3f51b5\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperClass={{}}\n      wrapperStyle=\"\"\n      visible={true}\n      className={css.loader}\n    />\n  </div>\n);\n\nexport default Spinner;","const fetchData = url =>\n        fetch(url)\n                .then(resp => resp.json())\n                .catch(error => console.log(error));\nexport default fetchData;"],"names":["useState","value","setValue","isLoading","setIsLoading","titles","handleSubmit","event","preventDefault","currentTarget","reset","trim","Notify","fetchData","movieList","results","length","map","movie","title","id","forEach","result","push","movieId","movieTitle","Error","onSubmit","htmlFor","type","onChange","target","Spinner","to","className","css","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","url","fetch","then","resp","json","catch","error","console","log"],"sourceRoot":""}